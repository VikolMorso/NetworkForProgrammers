{"version":3,"sources":["Api/API.js","components/img/preloader.gif","components/Profile/Profile.module.css","components/Friends/Friends.jsx","validators/validator1.js","components/Navigation/Navigation.module.css","components/Users/Users.module.css","components/Preloader/Textarea.jsx","redux/users-reducer.js","components/Dialogs/Dialogs.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Navigation/Navigation.jsx","components/Settings/Settings.jsx","redux/dialogs-reducer.js","components/Dialogs/DialogsLink/DialogsLink.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/HOC/WithAuthRedirect.js","redux/auth-reducer.js","redux/profile-reducer.js","redux/sidebar-reducer.js","redux/app-reducer.js","redux/store-redux.js","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/Status.js","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.js","components/login/login.jsx","AppNewContainer.js","serviceWorker.js","index.js","components/Preloader/Textarea.module.css","components/Header/Header.module.css","components/Preloader/Preloader.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/usurs-selector.js","components/Preloader/Paginator.js","components/Preloader/SearchForm.js","components/Users/UsersContainer.js","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css"],"names":["instance","axios","withCredentials","headers","baseURL","UsersApi","follow","id","delete","then","response","data","resultCode","unFollow","post","getUsers","currentPage","page","get","getOurUser","getProfileUser","userId","ProfileAPI","login","email","password","rememberMe","captcha","logout","getCaptcha","getFriends","searchUser","user","getStatusUser","updateStatus","status","put","savePhoto","photo","formData","FormData","append","saveProfile","module","exports","Friends","props","RequiredField","value","MaxLengthCreator","number","length","Textarea","error","meta","touched","input","className","s","error__textarea","error__span","Input","initialState","Users","count","isFetching","followInProgress","isFetchingAC","type","SetCurrent","FollowCreator","UnFollowCreator","SetUsers","SetUsersTotalCountAC","totalCount","FollowProgress","isFollow","GetUsersThunk","dispatch","items","GetFriends","friends","SearchUser","onPageChanget","p","path","a","FollowUnFollow","creator","api","Following","bind","UnFollowing","usersReduce","state","action","copyState","map","u","followed","statec","filter","Navigation","main","nav","nav__menu","link","to","activeClassName","active","setting","tittle","Settings","DialogsUser","name","MessageUser","message","dialogsReduce","newMessage","onMessageChange","DialogsLink","dialog","avatarka","src","alt","ava_user","Message","maxLength","MessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","textarea","placeholder","component","validate","send","Dialogs","DialogsUserMas","MessageUserMas","content","dialogs","messages","form__send","compose","connect","DialogsPage","newMessageCreator","Component","isAuth","Auth","IS_AUTH","SET_CAPTCHA","SetAuth","payload","url","AuthReduce","PostUser","likecount","profile","SetUsersProfile","SetStatusUser","savePhotoSuccess","getStatus","profileReduce","onPostChange","alert","newPost","textPost","photos","large","sidebarReduce","inition","INITIALED","AppReduce","reducers","combineReducers","ProfilePage","Sidebar","UsersPage","formReducer","App","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","Post","like","PostFormRedux","MyPosts","PostUserMas","key","myposts","sendPost","MyPostsContainer","sendPostCreator","Status","editMod","localStatus","switchStatusOn","setState","switchStatusOff","onChangeStatus","e","currentTarget","postStatus","prevProps","prevState","this","onBlur","autoFocus","onChange","onClick","isOurProfile","React","ProfileInfoFormRedux","aboutMe","Object","keys","contacts","ProfileInfo","useState","setEditMod","about","about__your","ava","ava__img","about__your__main","fullName","onDoubleClick","initialValues","lookingForAJob","lookingForAJobDescription","Profile","Preloader","ProfileContainer","target","files","console","log","match","params","idUser","myID","getState","withRouter","Header","header","header__karen","main__auth","auth","auth__btn","HeaderContainer","ReduxFormLogin","main__error","stopSubmit","_error","Music","lazy","InitialApp","exact","render","DialogsContainer","Suspense","fallback","UsersContainer","AppContainer","promise","Promise","all","AppNewContainer","StrictMode","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","preloader","User","AvatarkaAndBtn","small","href","btn_follow","disabled","some","info__users","city","country","block","getPage","getCount","getCurrentPage","getIsFetching","getFollowInProgress","require","Paginator","portSize","pagesCount","Math","ceil","pages","i","push","portionNumber","setPortionNumber","portionCount","leftNumber","rigthNumber","number__page","bold","UsersAPIContainer","Follow","UnFollow","UsersApiContainerWithRouter","pageNumber","isFollowProgress"],"mappings":"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","file":"static/js/main.7dd7aa16.chunk.js","sourcesContent":["import * as axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"f31e96ab-e0de-473e-a59d-f95043afee5c\"\r\n    },\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/'\r\n})\r\n\r\nexport const UsersApi = {\r\n    follow(id) {\r\n        return instance.delete(`follow/${id}`).then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                return response\r\n\r\n            }\r\n        })\r\n    },\r\n    unFollow(id) {\r\n        return instance.post(`follow/${id}`).then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                return response\r\n            }\r\n        })\r\n    },\r\n    getUsers(currentPage = 1, page = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${page} `).then(response => response.data)\r\n\r\n    },\r\n    getOurUser() {\r\n        return instance.get(`auth/me `)\r\n    },\r\n    getProfileUser(userId) {\r\n        return ProfileAPI.getProfileUser(userId)\r\n        // instance.get(`profile/`+userId)\r\n    },\r\n    login(email, password, rememberMe = false, captcha ){\r\n        \r\n        return instance.post('auth/login', {email, password, rememberMe, captcha})\r\n    },\r\n    logout(){\r\n        \r\n        return instance.delete('auth/login')\r\n    },\r\n    getCaptcha(){\r\n        \r\n        return instance.get('/security/get-captcha-url')\r\n    },\r\n    getFriends(currentPage = 1, page = 10){\r\n        return instance.get(`users?page=${currentPage}&count=${page}&friend=true `).then(response => response.data)\r\n    },\r\n    searchUser(user){\r\n        return instance.get(`users?term=${user}`).then(response => response.data)\r\n    },\r\n\r\n\r\n\r\n}\r\n\r\nexport const ProfileAPI = {\r\n    getProfileUser(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatusUser(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status) {\r\n        \r\n        return instance.put(`profile/status`, { status: status }).then(response => {\r\n            \r\n            if (response.data.resultCode === 0) {\r\n                return response\r\n            }\r\n        }\r\n        )\r\n    },\r\n    savePhoto(photo) {\r\n        var formData = new FormData();\r\n        formData.append(\"image\", photo)\r\n        \r\n        return instance.post(`profile/photo/`, formData,{\r\n            headers:{\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    saveProfile(data) {\r\n        \r\n        return instance.put(`profile/`, data)\r\n    },\r\n    \r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/preloader.e32b9873.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__MlfjR\"};","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { RequiredField } from \"../../validators/validator1\";\r\nimport { Input } from \"../Preloader/Textarea\";\r\nimport UsersContainer from \"../Users/UsersContainer\";\r\nimport s from \"./../Preloader/Textarea.module.css\";\r\n\r\nconst Friends = (props) => {\r\n  return (\r\n    <>\r\n      <UsersContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Friends;\r\n","import React from 'react';\r\n\r\nexport const RequiredField = (value)=>{\r\n    if (value) return undefined\r\n    return 'fill in the field'\r\n}\r\nexport const MaxLengthCreator=(number)=> {\r\n    return (value)=>{\r\n    if (value.length>number) return `maximum length ${number}`\r\n    return undefined\r\n}}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Navigation_main__2C-tC\",\"nav\":\"Navigation_nav__1Wiob\",\"nav__menu\":\"Navigation_nav__menu__3nb_X\",\"link\":\"Navigation_link__1dNPx\",\"active\":\"Navigation_active__2ciC5\",\"setting\":\"Navigation_setting__3jc6B\",\"tittle\":\"Navigation_tittle__27AHv\",\"users\":\"Navigation_users__3dn1Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Users_preloader__3fofS\",\"ggg\":\"Users_ggg__B85QW\",\"btn_follow\":\"Users_btn_follow__3i8Fx\",\"bold\":\"Users_bold__1Mqcn\",\"number__page\":\"Users_number__page__2QZm3\",\"block\":\"Users_block__1zTto\",\"main\":\"Users_main__2bL3X\",\"AvatarkaAndBtn\":\"Users_AvatarkaAndBtn__2mvj3\",\"ava\":\"Users_ava__2BmYi\",\"info__users\":\"Users_info__users___-DMr\",\"location\":\"Users_location__3txoh\"};","import React from 'react';\r\nimport s from './Textarea.module.css'\r\n\r\nexport const Textarea = (props)=>{\r\n    let error = props.meta.touched && props.meta.error\r\n    return(\r\n        <div>\r\n            <div>\r\n                <textarea {...props.input} className={ error ? s.error__textarea : ''}/>\r\n            </div>\r\n            <div>\r\n    {error && <span className={s.error__span}>{props.meta.error}</span>}\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = (props)=>{\r\n    let error = props.meta.touched && props.meta.error\r\n    return(\r\n        <div>\r\n            <div>\r\n                <input {...props.input} {...props} className={ error ? s.error__textarea : ''}/>\r\n            </div>\r\n            <div>\r\n    {error && <span className={s.error__span}>{props.meta.error}</span>}\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}","import { UsersApi } from \"../Api/API\";\r\n\r\nlet initialState = {\r\n    Users: [],\r\n    page: 5,\r\n    count: 10,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followInProgress: []\r\n\r\n}\r\nconst usersReduce = (state = initialState, action) => {\r\n\r\n    if (action.type === \"FOLLOW\") {\r\n        let copyState = {\r\n            ...state,\r\n            Users: state.Users.map(u => {\r\n                if (u.id === action.id) {\r\n                    let cState = { ...u, followed: false };\r\n\r\n                    return cState;\r\n                };\r\n\r\n                return u;\r\n            })\r\n\r\n        };\r\n        return copyState;\r\n    } else if (action.type === \"UNFOLLOW\") {\r\n        let copyState = {\r\n            ...state,\r\n            Users: state.Users.map(u => {\r\n                if (u.id === action.id) {\r\n                    let cState = { ...u, followed: true }\r\n\r\n                    return cState\r\n                };\r\n\r\n                return u;\r\n            })\r\n        }\r\n        return copyState;\r\n    } else if (action.type === \"SET-USERS\") {\r\n\r\n        let statec = { ...state, Users: action.Users }\r\n\r\n        return statec;\r\n    } else if (action.type === \"SET_CURRENT\") {\r\n        return { ...state, currentPage: action.currentPage }\r\n    } else if (action.type === \"SET_USER_TOTAL_COUNT\") {\r\n        return { ...state, count: action.count }\r\n    } else if (action.type === \"IS_FETCHING\") {\r\n        let copyState = { ...state, isFetching: action.isFetching }\r\n        return copyState;\r\n    } else if (action.type === 'FOLLOW_PROGRESS') {\r\n        return {\r\n            ...state,\r\n            followInProgress: action.isFollow ? [...state.followInProgress, action.id] : state.followInProgress.filter(id => id !== action.id)\r\n        }\r\n\r\n    } else if (action.type === 'SET_FRIENDS'){\r\n        return {\r\n            ...state, Users: action.friends\r\n        }\r\n    }\r\n    return state;\r\n}\r\n\r\n\r\nconst IS_FETCHING = 'IS_FETCHING'\r\nconst SET_CURRENT = 'SET_CURRENT'\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\nconst SET_USER_TOTAL_COUNT = 'SET_USER_TOTAL_COUNT'\r\nconst FOLLOW_PROGRESS = 'FOLLOW_PROGRESS';\r\nconst SET_FRIENDS = 'SET_FRIENDS';\r\n\r\nexport const SetFriends = (friends)=>({\r\n    type: SET_FRIENDS, friends\r\n})\r\nexport const isFetchingAC = (isFetching) => (\r\n    {\r\n\r\n        type: IS_FETCHING,\r\n        isFetching: isFetching\r\n    })\r\nexport const SetCurrent = (currentPage) => ({\r\n    type: SET_CURRENT,\r\n    currentPage: currentPage\r\n})\r\nexport const FollowCreator = (id) => ({\r\n\r\n    type: FOLLOW,\r\n    id: id\r\n});\r\nexport const UnFollowCreator = (id) => ({\r\n\r\n    type: UNFOLLOW,\r\n    id: id\r\n});\r\nexport const SetUsers = (Users) => ({\r\n    type: SET_USERS,\r\n    Users: Users\r\n});\r\nexport const SetUsersTotalCountAC = (totalCount) => ({\r\n    type: SET_USER_TOTAL_COUNT,\r\n    count: totalCount\r\n})\r\nexport const FollowProgress = (id, isFollow) => ({\r\n    type: FOLLOW_PROGRESS,\r\n    id,\r\n    isFollow\r\n})\r\n\r\nexport const GetUsersThunk = (currentPage, page) => {\r\n    return (dispatch) => {\r\n        dispatch(isFetchingAC(true));\r\n        UsersApi.getUsers(currentPage, page).then(data => {\r\n            dispatch(isFetchingAC(false));\r\n            dispatch(SetUsers(data.items))\r\n            dispatch(SetUsersTotalCountAC(data.totalCount))\r\n        })\r\n    }\r\n}\r\nexport const GetFriends = (currentPage, page) => {\r\n    return (dispatch) => {\r\n        dispatch(isFetchingAC(true));\r\n        UsersApi.getFriends(currentPage, page).then(data => {\r\n            debugger\r\n            dispatch(isFetchingAC(false));\r\n            dispatch(SetFriends(data.items))\r\n            dispatch(SetUsersTotalCountAC(data.totalCount))\r\n        })\r\n    }\r\n}\r\nexport const SearchUser = (user) =>{\r\n    return (dispatch) => {\r\n        dispatch(isFetchingAC(true));\r\n        UsersApi.searchUser(user).then(data => {\r\n            dispatch(isFetchingAC(false));\r\n            dispatch(SetUsers(data.items))\r\n            dispatch(SetUsersTotalCountAC(data.totalCount))\r\n    })\r\n}\r\n}\r\n\r\nexport const onPageChanget = (p, currentPage, page, path) => {\r\n    debugger\r\n    return async (dispatch) => {\r\n        dispatch(isFetchingAC(true));\r\n        dispatch(SetCurrent(p))\r\n        let data;\r\n        if (path === '/Users'){\r\n            data = await UsersApi.getUsers(currentPage, page)\r\n        } else{\r\n            data = await UsersApi.getFriends(currentPage, page)\r\n        }\r\n        \r\n        debugger\r\n            dispatch(isFetchingAC(false));\r\n            dispatch(SetUsers(data.items))\r\n        \r\n    }\r\n}\r\n\r\nconst FollowUnFollow = async (dispatch, id, creator, api) => {\r\n    dispatch(FollowProgress(id, true))\r\n        let response = await api(id)\r\n            dispatch(creator(id))\r\n            dispatch(FollowProgress(id, false))\r\n}\r\n\r\nexport const Following = (id) => {\r\n    return async (dispatch) => {\r\n        FollowUnFollow(dispatch, id, FollowCreator, UsersApi.follow.bind(UsersApi))\r\n    }\r\n}\r\nexport const UnFollowing = (id) => {\r\n    return async (dispatch) => {\r\n        FollowUnFollow(dispatch, id, UnFollowCreator, UsersApi.unFollow.bind(UsersApi))\r\n    }\r\n}\r\nexport default usersReduce;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Dialogs_content__Tdm4x\",\"main\":\"Dialogs_main__i1RaT\",\"dialogs\":\"Dialogs_dialogs__32peQ\",\"dialog\":\"Dialogs_dialog__2rWZE\",\"messages\":\"Dialogs_messages__2WeUS\",\"message\":\"Dialogs_message__3G1qD\",\"ava_user\":\"Dialogs_ava_user__2TLgm\",\"form__send\":\"Dialogs_form__send__3sVJD\",\"textarea\":\"Dialogs_textarea__1QJ-j\",\"send\":\"Dialogs_send__2Oh3v\",\"error__textarea\":\"Dialogs_error__textarea__1zygd\",\"error__span\":\"Dialogs_error__span__1w0xN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"banner\":\"ProfileInfo_banner__1hfrF\",\"about\":\"ProfileInfo_about__3iB3O\",\"about__your\":\"ProfileInfo_about__your__3-wi7\",\"ava\":\"ProfileInfo_ava__1GWrz\",\"ava__img\":\"ProfileInfo_ava__img__26OKz\",\"about__your__main\":\"ProfileInfo_about__your__main__224eB\",\"name\":\"ProfileInfo_name__3REcW\",\"dataBirth\":\"ProfileInfo_dataBirth__3qP_b\",\"city\":\"ProfileInfo_city__ldJDk\",\"edication\":\"ProfileInfo_edication__3OPjF\",\"site\":\"ProfileInfo_site__20iJI\",\"posts\":\"ProfileInfo_posts__3584F\",\"status\":\"ProfileInfo_status__JisL2\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./Navigation.module.css\";\r\nimport Sidebar from \"./Sidebar/Sidebar\";\r\nfunction Navigation(props) {\r\n  // let SidebarMas =props.Sidebar.map( p =>   <Sidebar avatarka={p.avatarka} key={p.id} name={p.name}/> )\r\n\r\n  return (\r\n    <div className={s.main}>\r\n      <nav className={s.nav}>\r\n        <ul className={s.nav__menu}>\r\n          <li className={s.link}>\r\n            <NavLink to=\"/Profile\" activeClassName={s.active}>\r\n              Profile\r\n            </NavLink>\r\n          </li>\r\n          <li className={s.link}>\r\n            <NavLink to=\"/Dialogs\" activeClassName={s.active}>\r\n              Dialogs\r\n            </NavLink>\r\n          </li>\r\n          <li className={s.link}>\r\n            <NavLink to=\"/friends\" activeClassName={s.active}>\r\n              Friends\r\n            </NavLink>\r\n          </li>\r\n          <li className={s.link}>\r\n            <NavLink to=\"/Music\" activeClassName={s.active}>\r\n              Music\r\n            </NavLink>\r\n          </li>\r\n          <li className={s.link}>\r\n            <NavLink to=\"/Users\" activeClassName={s.active}>\r\n              Users\r\n            </NavLink>\r\n          </li>\r\n\r\n          <li className={`${s.link} ${s.setting}`}>\r\n            <NavLink to=\"/Settings\" activeClassName={s.active}>\r\n              Settings\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <h3 className={s.tittle}>Friends</h3>\r\n      {/* <div className={s.users}>{SidebarMas}</div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nfunction Settings (props) {\r\n    return(\r\n        <div>\r\n           Settings\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Settings;","let initialState = {\r\n    DialogsUser: [\r\n        { id: 1, name: 'Max' },\r\n        { id: 2, name: 'Manya' },\r\n        { id: 3, name: 'Nikitos' },\r\n        { id: 4, name: 'Nastya' },\r\n        { id: 5, name: 'Inga' },\r\n        { id: 6, name: 'React' },\r\n    ],\r\n    MessageUser: [\r\n        { id: 1, message: 'Priv' },\r\n        { id: 2, message: 'opyt' },\r\n        { id: 3, message: 'skolko mozhno, Max' },\r\n        { id: 4, message: 'test' },\r\n    ]\r\n}\r\nconst dialogsReduce = (state = initialState, action) => {\r\n    if (action.type === \"ADD-MESSAGE\") {\r\n        let newMessage = {\r\n            id: 5,\r\n            message: action.message.message\r\n        }\r\n        debugger\r\n        return {\r\n            ...state,\r\n            MessageUser : [...state.MessageUser, newMessage],\r\n            onMessageChange : ''\r\n        };\r\n        \r\n    } \r\n    return state;\r\n}\r\n\r\n\r\nconst AddMessage = 'ADD-MESSAGE';           // type отвечает за добавление сообщения  \r\n\r\nexport const newMessageCreator = (message) => ({ type: AddMessage, message })\r\n\r\nexport default dialogsReduce;","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"..//Dialogs.module.css\";\r\n\r\nfunction DialogsLink(props) {\r\n  return (\r\n    <div className={s.dialog}>\r\n      <div className={s.avatarka}>\r\n        <img\r\n          src=\"https://okeygeek.ru/wp-content/uploads/2020/03/no_avatar.png\"\r\n          alt=\"\"\r\n          className={s.ava_user}\r\n        />\r\n      </div>\r\n      <NavLink to={\"/Dialogs/\" + props.id}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DialogsLink;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from '../Dialogs.module.css';\r\n\r\nfunction Message(props) {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n        \r\n    )\r\n};\r\n\r\nexport default Message;","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Field } from \"redux-form\";\r\nimport {\r\n  addMessage,\r\n  newMessageCreator,\r\n  onNewMessageCreator,\r\n} from \"../../redux/dialogs-reducer\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport DialogsLink from \"./DialogsLink/DialogsLink\";\r\nimport Message from \"./Message/Message\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../Preloader/Textarea\";\r\nimport { MaxLengthCreator, RequiredField } from \"../../validators/validator1\";\r\n\r\nfunction Dialogs(props) {\r\n  let DialogsUserMas = props.DialogsUser.map((user) => (\r\n    <DialogsLink name={user.name} id={user.id} />\r\n  )); //мапим юзеров в диалогах\r\n\r\n  let MessageUserMas = props.MessageUser.map((message) => (\r\n    <Message message={message.message} />\r\n  )); // мапим сообщения юзеров\r\n\r\n  let onSubmitMessage = (value) => {\r\n    props.newMessage(value);\r\n  };\r\n  return (\r\n    <div className={s.content}>\r\n      <h1>Dialogs</h1>\r\n      <div className={s.main}>\r\n        <div className={s.dialogs}>{DialogsUserMas}</div>\r\n        <div className={s.messages}>\r\n          {MessageUserMas}\r\n\r\n          <div className={s.form__send}>\r\n            <MessageFormRedux onSubmit={onSubmitMessage} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst maxLength = MaxLengthCreator(100);\r\nconst DialogsForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field\r\n        name=\"message\"\r\n        className={s.textarea}\r\n        placeholder=\"enter your message\"\r\n        component={Textarea}\r\n        validate={[RequiredField, maxLength]}\r\n      />\r\n      <button className={s.send}>Send</button>\r\n    </form>\r\n  );\r\n};\r\nconst MessageFormRedux = reduxForm({ form: \"MessageForm\" })(DialogsForm);\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { addMessage, newMessageCreator, onNewMessageCreator } from '../../redux/dialogs-reducer';\r\nimport { WithAuthRedirect } from '../HOC/WithAuthRedirect';\r\nimport Dialogs from './Dialogs';\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    \r\n    return{\r\n        DialogsUser:state.DialogsPage.DialogsUser,\r\n        MessageUser:state.DialogsPage.MessageUser,\r\n       \r\n\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        newMessage : (message) => {                     \r\n            dispatch(newMessageCreator(message));\r\n        }\r\n    \r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps),WithAuthRedirect)(Dialogs)\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\n\r\nexport const WithAuthRedirect=(Component)=>{\r\n    let mapStateToProps = (state)=>({\r\n    isAuth: state.Auth.isAuth,\r\n})\r\n    let WrapperContainer = (props) =>{\r\n        \r\n        if(!props.isAuth){ return <Redirect to='/login'/>\r\n    } else \r\n       { return (\r\n        <Component {...props} />\r\n    )}\r\n    }\r\n    return connect(mapStateToProps)(WrapperContainer)\r\n}\r\n\r\n","import { stopSubmit } from \"redux-form\";\r\nimport { UsersApi } from \"../Api/API\";\r\n\r\nlet initialState = {\r\n  id: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false,\r\n  captcha: null\r\n};\r\nconst AuthReduce = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case IS_AUTH: {\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    }\r\n    case SET_CAPTCHA: {\r\n        return {\r\n            ...state, captcha: action.captcha\r\n        }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst IS_AUTH = \"IS_AUTH\";\r\nconst SET_CAPTCHA = \"SET_CAPTCHA\"\r\nexport const SetAuth = (id, email, login, isAuth) => ({\r\n  type: IS_AUTH,\r\n  payload: { id, email, login, isAuth },\r\n});\r\nexport const setCaptcha = (captcha) => ({\r\n    type: SET_CAPTCHA, captcha\r\n})\r\n\r\nexport const getOurUser = () => (dispatch) => {\r\n  return UsersApi.getOurUser().then((response) => {\r\n    if (response.data.resultCode === 0) {\r\n      let { id, email, login } = response.data.data;\r\n      dispatch(SetAuth(id, email, login, true));\r\n    }\r\n  });\r\n};\r\n\r\nexport const getCaptcha = () => (dispatch) => {\r\n    return UsersApi.getCaptcha().then((response)=>{\r\n        dispatch(setCaptcha(response.data.url))\r\n        \r\n    })\r\n}\r\n\r\nexport const login = (email, password, rememberMe = false, captcha) => {\r\n  return async (dispatch) => {\r\n    let response = await UsersApi.login(email, password, rememberMe, captcha);\r\n   \r\n    if (response.data.resultCode === 0) {\r\n      dispatch(getOurUser());\r\n    } else if (response.data.resultCode === 10) {\r\n      dispatch(getCaptcha());\r\n    } else {\r\n      let message =\r\n        response.data.messages.length > 0\r\n          ? response.data.messages[0]\r\n          : \"some error\";\r\n\r\n      dispatch(stopSubmit(\"login\", { _error: message }));\r\n    }\r\n  };\r\n};\r\nexport const logout = () => {\r\n  return async (dispatch) => {\r\n    let response = await UsersApi.logout();\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(SetAuth(null, null, null, false));\r\n    }\r\n  };\r\n};\r\nexport default AuthReduce;\r\n","import { ProfileAPI, UsersApi } from \"../Api/API\";\r\nimport store from \"./store-redux\";\r\n\r\n\r\nlet initialState = {\r\n    PostUser: [\r\n        { id: 1, post: 'Привет', likecount: 2 },\r\n        { id: 2, post: 'тут ты можешь запосить свой коммент', likecount: 0 },\r\n        { id: 3, post: 'но пока, к сожалению, он будет виден только тебе и потеряется, если ты перезапустишь страницу', likecount: 66 },\r\n    ],\r\n    profile: null,\r\n    status:''\r\n}\r\nconst profileReduce = (state = initialState, action) => {\r\n    \r\n    if (action.type === \"ADD-POST\") {\r\n        \r\n        if (state.onPostChange === '') {   \r\n             //проверка поля на заполненность, если ничего не введено, то выдаст \"пустое поле\"\r\n            return alert('Пустое поле')\r\n        } else {\r\n            let newPost = {                        //создаем новое свойство объекта PostUser\r\n                id: 5,\r\n                post: action.textPost.newPost,\r\n                likecount: 0\r\n            };\r\n            debugger\r\n            return {\r\n                ...state,\r\n                PostUser: [...state.PostUser, newPost],\r\n            };\r\n            \r\n        }\r\n         \r\n    } else if (action.type === \"SET_USERS_PROFILE\"){\r\n        return{ ...state, profile: action.profile}\r\n    } else if (action.type === \"SET_STATUS_USER\"){\r\n        \r\n        return {...state, status: action.status}\r\n    } else if (action.type === \"SAVE_PHOTO_SUCCESS\"){\r\n        debugger\r\n        return {...state, profile: {...state.profile, photos: {...state.profile.photos, large: action.photo}}}\r\n    }\r\n    return state;\r\n}\r\n\r\nconst AddPost = 'ADD-POST';                        // type отвечает за добавление поста \r\nconst SET_USERS_PROFILE = 'SET_USERS_PROFILE';\r\nconst SET_STATUS_USER = 'SET_STATUS_USER'\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS'\r\n\r\nexport const sendPostCreator = (textPost) => ({ type: AddPost, textPost }); //передаем диспатчу тип, который добавляет новый пост на страницу\r\n\r\nexport const SetUsersProfile=(profile)=>({ type: SET_USERS_PROFILE, profile})\r\n\r\nexport const SetStatusUser=(status)=>({type: SET_STATUS_USER, status: status})\r\n\r\nexport const savePhotoSuccess = (photo) => ({ type: SAVE_PHOTO_SUCCESS, photo})\r\n\r\nexport const getProfileUser=(userId)=>{\r\n    return async (dispatch)=>{\r\n    let response = await UsersApi.getProfileUser(userId)\r\n    \r\n            dispatch(SetUsersProfile(response.data))\r\n            dispatch(getStatus(response.data.userId))\r\n            \r\n    }\r\n}\r\nexport const getStatus=(userId)=>{\r\n    return async (dispatch)=>{\r\n   let response = await ProfileAPI.getStatusUser(userId)\r\n        dispatch(SetStatusUser(response.data))\r\n}}\r\nexport const updateStatus=(status)=>{\r\n    \r\n    return async (dispatch)=>{\r\n        debugger\r\n    let response = await ProfileAPI.updateStatus(status)\r\n        dispatch(SetStatusUser(status))\r\n    }\r\n}\r\nexport const savePhoto=(photo)=>{\r\n    return async (dispatch)=>{\r\n    let response = await ProfileAPI.savePhoto(photo)\r\n    \r\n        dispatch(savePhotoSuccess(response.data.data.photos.large))\r\n    }\r\n}\r\n\r\n\r\nexport const saveProfile = (formData) =>{\r\n    const id = store.getState().Auth.id;\r\n    debugger\r\n    return async (dispatch) => {\r\n        debugger\r\n        let response = await ProfileAPI.saveProfile(formData)\r\n        debugger\r\n        dispatch(getProfileUser(id))\r\n    }\r\n}\r\nexport default profileReduce;","let initialState = [\r\n    { id: 1, avatarka: 'https://sovietgames.su/wp-content/uploads/2016/07/%D0%90%D0%B2%D0%B0%D1%82%D0%B0%D1%80%D0%BA%D0%B0.jpg', name: 'Max' },\r\n    { id: 1, avatarka: 'https://sovietgames.su/wp-content/uploads/2016/07/%D0%90%D0%B2%D0%B0%D1%82%D0%B0%D1%80%D0%BA%D0%B0.jpg', name: 'Vika' },\r\n    { id: 1, avatarka: 'https://sovietgames.su/wp-content/uploads/2016/07/%D0%90%D0%B2%D0%B0%D1%82%D0%B0%D1%80%D0%BA%D0%B0.jpg', name: 'Masha' }\r\n]\r\nconst sidebarReduce = (state = initialState, action) =>{\r\nreturn state;\r\n}\r\n\r\nexport default sidebarReduce;","import { UsersApi } from \"../Api/API\";\r\nimport { getOurUser } from \"./auth-reducer\";\r\n\r\nlet initialState = {\r\n    inition: false\r\n}\r\nconst AppReduce = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n    case INITIALED: {\r\n        \r\n        return {\r\n            ...state,\r\n            inition: true\r\n        };\r\n    } \r\n    default:\r\n    return state;\r\n}\r\n}\r\nconst INITIALED = 'INITIALED'\r\n\r\nexport const Initialed = () => (\r\n    {\r\n    type: INITIALED,\r\n})\r\nexport const InitialApp=()=>(dispatch) => {\r\n       let promise =  dispatch(getOurUser())\r\n       \r\n       Promise.all([promise]).then(()=>\r\n           dispatch(Initialed())\r\n       )\r\n    }\r\n    \r\n\r\n\r\nexport default AppReduce;","import {applyMiddleware, combineReducers, compose, createStore} from 'redux';\r\nimport AuthReduce from './auth-reducer';\r\nimport dialogsReduce from './dialogs-reducer';\r\nimport profileReduce from './profile-reducer';\r\nimport sidebarReduce from './sidebar-reducer';\r\nimport usersReduce from './users-reducer';\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport AppReduce from './app-reducer';\r\n\r\n\r\nlet reducers = combineReducers({\r\n    ProfilePage: profileReduce,\r\n    DialogsPage: dialogsReduce,\r\n    Sidebar: sidebarReduce,\r\n    UsersPage: usersReduce,\r\n    Auth: AuthReduce,\r\n    form: formReducer,\r\n    App: AppReduce,\r\n\r\n});\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n  ));\r\n\r\n//let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.__store__ = store\r\nexport default store;","import React from 'react';\r\nimport s from './Post.module.css';\r\nfunction Post(props) {\r\n    return (\r\n        <div className={s.post}>\r\n            <img src='https://archilab.online/images/1/123.jpg' className={s.ava_user}></img>\r\n            <p>{props.post}</p>\r\n            <div className={s.like}>Like: {props.likecount}</div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  MaxLengthCreator,\r\n  RequiredField,\r\n} from \"../../../validators/validator1\";\r\nimport { Textarea } from \"../../Preloader/Textarea\";\r\n\r\nlet maxLength = MaxLengthCreator(20);\r\n\r\nfunction MyPosts(props) {\r\n  let PostUserMas = props.PostUser.map((p) => (\r\n    <Post post={p.post} key={p.id} likecount={p.likecount} />\r\n  )); /* Мапим посты пользователей с кол-вом лайков*/\r\n\r\n  let onSubmit = (textPost) => {\r\n    props.sendPost(textPost);\r\n  };\r\n\r\n  return (\r\n    <div className={s.myposts}>\r\n      <p>My posts</p>\r\n      <PostFormRedux onSubmit={onSubmit} />\r\n      {PostUserMas}\r\n    </div>\r\n  );\r\n}\r\nconst PostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field\r\n        className={s.Field}\r\n        name=\"newPost\"\r\n        component={Textarea}\r\n        validate={[RequiredField, maxLength]}\r\n      ></Field>\r\n      <br />\r\n      <button className={s.send}>Send</button>\r\n    </form>\r\n  );\r\n};\r\nconst PostFormRedux = reduxForm({ form: \"post\" })(PostForm);\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { sendPostCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    PostUser: state.ProfilePage.PostUser,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendPost: (textPost) => {\r\n      //обработчик событий при клике на кнопку отправить пост\r\n      dispatch(sendPostCreator(textPost));\r\n    },\r\n  };\r\n};\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport s from './ProfileInfo.module.css';\r\nimport { updateStatus } from '../../../redux/profile-reducer';\r\nclass Status extends React.Component {\r\n    state = {\r\n        editMod: false,\r\n        localStatus: this.props.status\r\n    }\r\n    switchStatusOn = () => {\r\n\r\n        this.setState(\r\n            {\r\n                editMod: true\r\n            })\r\n    }\r\n    switchStatusOff = () => {\r\n\r\n        this.setState({\r\n            editMod: false\r\n        })\r\n        this.props.updateStatus(this.state.localStatus)\r\n    }\r\n    onChangeStatus = (e) => {\r\n\r\n        this.setState({\r\n            localStatus: e.currentTarget.value\r\n        })\r\n    }\r\n    postStatus = () => {\r\n        debugger\r\n        this.props.updateStatus(this.state.localStatus)\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        \r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                localStatus: this.props.status\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return <div>\r\n            {this.state.editMod ?\r\n                <div><textarea onBlur={this.switchStatusOff} autoFocus={true} onChange={this.onChangeStatus} value={this.state.localStatus}></textarea>\r\n                    <button onClick={this.postStatus}>отправить</button></div> :\r\n                <div onClick={this.props.isOurProfile && this.switchStatusOn} className={s.status}>{this.props.status || 'no status'}</div>\r\n\r\n            }\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Status","import React, { useState } from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  MaxLengthCreator,\r\n  RequiredField,\r\n} from \"../../../validators/validator1\";\r\nimport { Input, Textarea } from \"../../Preloader/Textarea\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport StatusHook from \"./Status\";\r\n\r\nconst maxLength = MaxLengthCreator(60);\r\n\r\nfunction ProfileInfo(props) {\r\n  const [editMod, setEditMod] = useState(false);\r\n\r\n  const onSubmit = (formData) => {\r\n    props.saveProfile(formData);\r\n    setEditMod(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <div className={s.about}>\r\n        <div className={s.about__your}>\r\n          <div className={s.ava}>\r\n            {props.profile.photos.large === null ? (\r\n              <img\r\n                src=\"https://okeygeek.ru/wp-content/uploads/2020/03/no_avatar.png\"\r\n                alt=\"\"\r\n                className={s.ava__img}\r\n              />\r\n            ) : (\r\n              <img\r\n                src={props.profile.photos.large}\r\n                alt=\"\"\r\n                className={s.ava__img}\r\n              />\r\n            )}\r\n          </div>\r\n\r\n          <div className={s.about__your__main}>\r\n            <div className={s.name}>{props.profile.fullName}</div>\r\n            <StatusHook\r\n              status={props.status}\r\n              updateStatus={props.updateStatus}\r\n              isOurProfile={props.isOurProfile}\r\n            />\r\n            {props.isOurProfile && (\r\n              <div>\r\n                New photo: <input type=\"file\" onChange={props.savePhoto} />\r\n              </div>\r\n            )}\r\n            {!editMod ? (\r\n              <div onDoubleClick={() => setEditMod(true)}>\r\n                <div>\r\n                  <b>About Me</b>:{props.profile.aboutMe}\r\n                </div>\r\n                <div>\r\n                  <b>Looking For A job</b>:{props.profile.lookingForAJob}\r\n                </div>\r\n                <div>\r\n                  <b>Looking For A Job Description</b>:\r\n                  {props.profile.lookingForAJobDescription}\r\n                </div>\r\n                <div>\r\n                  <b>Full Name</b>:{props.profile.fullName}\r\n                </div>\r\n                {Object.keys(props.profile.contacts).map((key) => {\r\n                  return (\r\n                    <div key={key}>\r\n                      <b>{key}</b>: {props.profile.contacts[key]}\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            ) : (\r\n              <div onDoubleClick={() => setEditMod(false)}>\r\n                <ProfileInfoFormRedux\r\n                  {...props}\r\n                  onSubmit={onSubmit}\r\n                  initialValues={{ ...props.profile }}\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst ProfileInfoForm = (props) => {\r\n  debugger;\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <button>Send</button>\r\n      <div>\r\n        <b>About me:</b>:\r\n        <Field\r\n          className={s.Field}\r\n          name=\"aboutMe\"\r\n          component={Textarea}\r\n          placeholder={props.profile.aboutMe}\r\n          validate={[RequiredField, maxLength]}\r\n        ></Field>\r\n      </div>\r\n      <div>\r\n        <b>Looking For A job</b>:\r\n        <Field name=\"LookingForAJob\" type=\"checkbox\" component=\"input\" />\r\n      </div>\r\n      <div>\r\n        <b>Looking For A Job Description</b>:\r\n        <Field\r\n          className={s.Field}\r\n          name=\"lookingForAJobDescription\"\r\n          component={Textarea}\r\n          validate={[RequiredField, maxLength]}\r\n        ></Field>\r\n      </div>\r\n      <div>\r\n        <b>Full Name</b>:{\" \"}\r\n        <Field\r\n          name=\"fullName\"\r\n          component={Input}\r\n          validate={[RequiredField, maxLength]}\r\n        />\r\n      </div>\r\n      {Object.keys(props.profile.contacts).map((key) => {\r\n        return (\r\n          <div key={key}>\r\n            <b>{key}</b>:{\" \"}\r\n            <Field className={s.Field} name={key} component={Textarea}></Field>\r\n          </div>\r\n        );\r\n      })}{\" \"}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ProfileInfoFormRedux = reduxForm({\r\n  form: \"ProfileInfo\",\r\n})(ProfileInfoForm);\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport store from \"../../redux/store-redux\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport s from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nfunction Profile(props) {\r\n  if (!props.isAuth) {\r\n    return <Redirect to=\"login\" />;\r\n  }\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n  return (\r\n    <section className={s.profile}>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n        savePhoto={props.savePhoto}\r\n        isOurProfile={props.isOurProfile}\r\n        saveProfile={props.saveProfile}\r\n      />\r\n      <MyPostsContainer store={props.store} />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  SetUsersProfile,\r\n  getProfileUser,\r\n  getStatus,\r\n  updateStatus,\r\n  savePhoto,\r\n  saveProfile,\r\n} from \"../../redux/profile-reducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    console.log(this.props);\r\n    let userId = this.props.match.params.idUser;\r\n\r\n    if (!userId) {\r\n      let id = this.props.myID;\r\n\r\n      this.props.getProfileUser(id);\r\n    } else {\r\n      this.props.getProfileUser(userId);\r\n    }\r\n\r\n    this.props.getStatus(userId);\r\n  }\r\n  savePhoto = (e) => {\r\n    if (e.target.files.length) {\r\n      this.props.savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        isOurProfile={!this.props.match.params.idUser}\r\n        savePhoto={this.savePhoto}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  status: state.ProfilePage.status,\r\n  myID: state.Auth.id,\r\n  profile: state.ProfilePage.profile,\r\n  isAuth: state.Auth.isAuth,\r\n});\r\n//WithAuthRedirect,\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    SetUsersProfile,\r\n    getProfileUser,\r\n    getStatus,\r\n    updateStatus,\r\n    savePhoto,\r\n    saveProfile,\r\n  }),\r\n  withRouter\r\n)(ProfileContainer);\r\n","import React from \"react\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport s from \"./Header.module.css\";\r\nfunction Header(props) {\r\n  return (\r\n    <header className={s.header}>\r\n      <h1 className={s.header__karen}>social programmers</h1>\r\n      {props.isAuth ? (\r\n        <div className={s.main__auth}>\r\n          <NavLink to=\"/profile\" className={s.auth}>\r\n            {props.login}\r\n          </NavLink>\r\n          <button onClick={props.logout} className={s.auth__btn}>\r\n            Logout\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <NavLink to=\"/login\" className={s.auth}>\r\n          Login\r\n          <Redirect to=\"/login\" />\r\n        </NavLink>\r\n      )}\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { getOurUser, SetAuth,logout } from '../../redux/auth-reducer';\r\n\r\n\r\nclass HeaderContainer extends React.Component{\r\n\r\n    \r\n    render(){return(\r\n        <Header {...this.props} />\r\n    )}\r\n}\r\n let mapStateToProps = (state) => {\r\n     \r\n     return {\r\n        login: state.Auth.login,\r\n        isAuth: state.Auth.isAuth\r\n        \r\n     }\r\n }\r\n\r\nexport default connect(mapStateToProps, {SetAuth, getOurUser, logout})(HeaderContainer);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { login } from \"../../redux/auth-reducer\";\r\nimport { RequiredField } from \"../../validators/validator1\";\r\nimport { Input } from \"../Preloader/Textarea\";\r\nimport s from \"./../Preloader/Textarea.module.css\";\r\n\r\nconst LoginRedux = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      {props.error && <div className={s.main__error}>{props.error}</div>}\r\n      <div>\r\n        <Field\r\n          name=\"login\"\r\n          placeholder=\"login\"\r\n          component={Input}\r\n          validate={[RequiredField]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Field\r\n          name=\"password\"\r\n          placeholder=\"password\"\r\n          component={Input}\r\n          validate={[RequiredField]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Field name=\"rememberMe\" type=\"checkbox\" component=\"input\" /> remember\r\n        me\r\n      </div>\r\n      {props.captcha === null ? null : (\r\n        <div>\r\n          <img src={props.captcha} />\r\n          <div>\r\n            <Field\r\n              name=\"captcha\"\r\n              component={Input}\r\n              validate={[RequiredField]}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div>\r\n        <button>Login</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ReduxFormLogin = reduxForm({ form: \"login\" })(LoginRedux);\r\n\r\nconst Login = (props) => {\r\n  let onSubmit = (formData) => {\r\n    debugger;\r\n    props.login(\r\n      formData.login,\r\n      formData.password,\r\n      formData.rememberMe,\r\n      formData.captcha\r\n    );\r\n  };\r\n\r\n  if (props.auth === true) {\r\n    return <Redirect to={\"/profile\"} />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <ReduxFormLogin onSubmit={onSubmit} captcha={props.captcha} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.Auth.isAuth,\r\n  captcha: state.Auth.captcha,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport {Provider} from \"react-redux\"\nimport Settings from './components/Settings/Settings';\nimport { BrowserRouter, Route, Switch, withRouter } from 'react-router-dom';\nimport './App.css';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\nimport UsersContainer from './components/Users/UsersContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './components/login/login';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport {InitialApp} from './redux/app-reducer'\nimport Preloader from './components/Preloader/Preloader';\nimport store from './redux/store-redux';\nimport Friends from './components/Friends/Friends';\n\nconst News = React.lazy( () =>  import ('./components/Friends/Friends'))\nconst Music = React.lazy( () =>  import ('./components/Music/Music'))\n\nclass App extends React.Component {\n    \n    componentDidMount(){\n        this.props.InitialApp()\n        \n    }\n    render(){\n        if (!this.props.inition){\n             return <Preloader />}\n    return (<BrowserRouter >\n<Switch>\n        <div className=\"main\" >\n            <HeaderContainer/>\n            <div className=\"content\" >\n                <Navigation  />\n                {/* Sidebar={this.props.appState.Sidebar} */}\n                <Route exact path=\"/\" render={() => < ProfileContainer store={this.props.store}  />} />\n                <Route path=\"/Profile/:idUser?\" render={() => < ProfileContainer store={this.props.store}  />} />\n                <Route path=\"/Dialogs\" render={() => < DialogsContainer store={this.props.store}  />} />\n                <Route path=\"/login\" render={()=> <Login/>}/>\n                <Route path=\"/friends\" render={() =>  <React.Suspense fallback = {<div>Loading</div>}>< Friends /></React.Suspense>} />\n                <Route path=\"/Music\" render={() => <React.Suspense fallback = {<div>Loading</div>}>< Music /></React.Suspense>} />\n                <Route path=\"/Settings\" render={() => < Settings />} />\n                <Route path=\"/Users\" render={()=> <UsersContainer store={this.props.store}/>} />\n            </div>\n        </div></Switch>\n    </BrowserRouter>\n    );\n}\n}\nlet mapStateToProps = (state) =>({\n    inition: state.App.inition\n})\nconst AppContainer = compose(connect(mapStateToProps, {InitialApp}))(App);\n\nexport const AppNewContainer = (props) =>{\n    return <React.StrictMode>\n    <Provider store={store}>\n      <AppContainer {...props}/>\n    </Provider>\n  </React.StrictMode>\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {AppNewContainer} from './AppNewContainer';\nimport * as serviceWorker from './serviceWorker';\n\n\n\n\n\n\n\n  ReactDOM.render(\n    \n        <AppNewContainer />\n      ,\n    document.getElementById('root')\n  );\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error__textarea\":\"Textarea_error__textarea__1XPxm\",\"error__span\":\"Textarea_error__span__9ZhLR\",\"main__error\":\"Textarea_main__error__3zLbM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__b-0vY\",\"header__karen\":\"Header_header__karen__3fhyA\",\"main__auth\":\"Header_main__auth__2EaTU\",\"auth\":\"Header_auth__BK54q\",\"auth__btn\":\"Header_auth__btn__qA_Kq\"};","import React from 'react';\r\nimport preloader from '../img/preloader.gif'\r\n\r\n\r\nlet Preloader =(props) =>{\r\n    return <img src={preloader} />\r\n}\r\nexport default Preloader;","import { NavLink } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport s from \"./Users.module.css\";\r\n\r\nfunction User({ u, followInProgress, Following, UnFollowing }) {\r\n  return (\r\n    <div key={u.id} className={s.main}>\r\n      <div className={s.AvatarkaAndBtn}>\r\n        <NavLink to={\"/profile/\" + u.id}>\r\n          <img\r\n            src={\r\n              u.photos.small != null\r\n                ? u.photos.small\r\n                : \"https://user-life.com/uploads/posts/2018-08/1535615328_kak-udalit-avatarku-postavit-foto-sdelat-zagruzit-dobavit-telegramm-skayp-vayber-vatsap-windows-10.gif\"\r\n            }\r\n            alt=\"\"\r\n            className={s.ava}\r\n          />\r\n        </NavLink>\r\n        {u.followed ? (\r\n          <button\r\n            href=\"#\"\r\n            className={s.btn_follow}\r\n            disabled={followInProgress.some((id) => id === u.id)}\r\n            onClick={() => {\r\n              return Following(u.id);\r\n            }}\r\n          >\r\n            UnFollow\r\n          </button>\r\n        ) : (\r\n          <button\r\n            href=\"#\"\r\n            className={s.btn_follow}\r\n            disabled={followInProgress.some((id) => id === u.id)}\r\n            onClick={() => {\r\n              return UnFollowing(u.id);\r\n            }}\r\n          >\r\n            Follow\r\n          </button>\r\n        )}\r\n      </div>\r\n      <div className={s.info__users}>\r\n        <NavLink to={\"/profile/\" + u.id}>\r\n          <p className={s.name}>{u.name}</p>\r\n        </NavLink>\r\n        <p className={s.status}>{u.status != null ? u.status : \"no status\"}</p>\r\n      </div>\r\n      <div className={s.location}>\r\n        <p className={s.city}>{\"u.city\"},</p>\r\n        <p className={s.country}>{\"u.country\"}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default User;\r\n","import React from \"react\";\r\nimport User from \"./User\";\r\nimport s from \"./Users.module.css\";\r\n\r\nfunction Users(props) {\r\n  return (\r\n    <div className={s.block}>\r\n      {props.Users.map((u) => (\r\n        <User\r\n          u={u}\r\n          followInProgress={props.followInProgress}\r\n          Following={props.Following}\r\n          UnFollowing={props.UnFollowing}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Users;\r\n","export const getUsers = (state) =>{\r\n    return state.UsersPage.Users\r\n}\r\n\r\nexport const getPage = (state) =>{\r\n    return state.UsersPage.page\r\n}\r\n\r\nexport const getCount = (state) =>{\r\n    return state.UsersPage.count\r\n}\r\n\r\nexport const getCurrentPage = (state) =>{\r\n    return state.UsersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state) =>{\r\n    return state.UsersPage.isFetching\r\n}\r\n\r\nexport const getFollowInProgress = (state) =>{\r\n    return state.UsersPage.followInProgress\r\n}\r\n\r\n","import s from '../Users/Users.module.css';\r\nimport React from \"react\";\r\n\r\n\r\n\r\nconst { useState } = require(\"react\");\r\n\r\nconst Paginator = ({count, page, currentPage, onPageChanget, portSize = 10}) =>{\r\n    console.log(count, page, currentPage, onPageChanget, portSize = 10)\r\n    let pagesCount = Math.ceil(count / page);\r\n\r\n    let pages = [];\r\n    \r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    };\r\n\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n\r\n    let portionCount = Math.ceil(pagesCount / portSize);\r\n    let leftNumber = (portionNumber-1)*portSize+1;\r\n    let rigthNumber = leftNumber + portSize-1;\r\n\r\n\r\n    return  <div>\r\n        {portionNumber > 1 && <button onClick={() => setPortionNumber(portionNumber-1)}>PREV</button>}\r\n        {pages.filter(p => p>=leftNumber && p<=rigthNumber).map(p => {\r\n                return <span className={s.number__page}>\r\n                    <span className={currentPage === p && s.bold} onClick={() => onPageChanget(p)}>\r\n                   {p}</span></span>\r\n                \r\n        })}\r\n        {portionCount > portionNumber && <button onClick={() => setPortionNumber(portionNumber+1)}>NEXT</button>}\r\n    </div>\r\n} \r\n\r\nexport default Paginator;","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { MaxLengthCreator, RequiredField } from \"../../validators/validator1\";\r\n\r\nimport { Input } from \"./Textarea\";\r\n\r\nlet maxLength = MaxLengthCreator(20);\r\n\r\nfunction Search(props) {\r\n  \r\n  let onSubmit = (user) => {\r\n    props.SearchUser(user);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p>Search</p>\r\n      <SearchFormRedux onSubmit={onSubmit} />\r\n      \r\n    </div>\r\n  );\r\n}\r\nconst SearchForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field\r\n       \r\n        name=\"searchUser\"\r\n        component={Input}\r\n        validate={[RequiredField, maxLength]}\r\n      ></Field>\r\n      <br />\r\n      <button >Search</button>\r\n    </form>\r\n  );\r\n};\r\nconst SearchFormRedux = reduxForm({ form: \"search\" })(SearchForm);\r\nexport default Search;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { CurrentAC, FollowCreator, Following,UnFollowing, FollowProgress, GetUsersThunk, isFetchingAC, onPageChanget, SetCurrent, SetUsers, SetUsersTotalCountAC, UnFollowCreator, GetFriends, SearchUser } from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport * as axios from 'axios';\r\nimport Preloader from '../Preloader/Preloader';\r\nimport { UsersApi } from '../../Api/API';\r\nimport { getCount, getCurrentPage, getFollowInProgress, getIsFetching, getPage, getUsers } from '../../redux/usurs-selector';\r\nimport Paginator from '../Preloader/Paginator';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Search from '../Preloader/SearchForm';\r\n\r\n\r\nclass UsersAPIContainer extends React.Component {\r\n\r\n    componentDidMount(){\r\n        if (this.props.match.path != '/friends'){\r\n        this.props.GetUsersThunk(this.props.currentPage, this.props.page)\r\n    }else {\r\n        this.props.GetFriends(this.props.currentPage, this.props.page)\r\n    }\r\n    }\r\n    path = this.props.match.path;\r\n    onPageChanget = (p) => {\r\n        debugger\r\n        this.props.onPageChanget(p, this.props.currentPage, this.props.page, this.path)\r\n    }\r\nrender(){\r\n    return <div>\r\n        <Paginator\r\n        count={this.props.count}\r\n        page={this.props.page}\r\n        currentPage={this.props.currentPage}\r\n        onPageChanget={this.onPageChanget}\r\n      />\r\n      {/* <Search SearchUser={this.props.SearchUser}/> */}\r\n    {this.props.isFetching ? <Preloader/> : \r\n    <>\r\n    \r\n    <Users count={this.props.count}\r\n    page={this.props.page}\r\n    currentPage={this.props.currentPage}\r\n    onPageChanget={this.onPageChanget}\r\n    Users={this.props.Users}\r\n    Follow={this.props.Follow}\r\n    UnFollow={this.props.UnFollow}\r\n    followInProgress={this.props.followInProgress}\r\n    isFollow={this.props.isFollow}\r\n    Following={this.props.Following}\r\n    UnFollowing={this.props.UnFollowing}\r\n\r\n    /> </> }\r\n    \r\n    </div>\r\n}\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    \r\n    return {\r\n        Users: getUsers(state),\r\n        page: getPage(state),\r\n        count: getCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followInProgress: getFollowInProgress(state)\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    \r\n//Нужно сократить код засунув весь диспатч объектом в сам коннект!\r\n\r\n    return {\r\n        Follow: (id) => {\r\n            \r\n            dispatch(FollowCreator(id))\r\n        },\r\n        UnFollow: (id) => {\r\n            \r\n            dispatch(UnFollowCreator(id))\r\n        },\r\n        SetUsers: (Users) => {\r\n            dispatch(SetUsers(Users));\r\n        },\r\n        SetCurrent: (pageNumber) =>{\r\n            dispatch(SetCurrent(pageNumber))\r\n        },\r\n        SetUsersTotalCountAC: (totalCount) => {\r\n            dispatch(SetUsersTotalCountAC(totalCount))\r\n        },\r\n        isFetchingAC: (isFetching) =>{\r\n            dispatch(isFetchingAC(isFetching))\r\n        },\r\n        isFollow: (id, isFollowProgress)=>{\r\n            dispatch(FollowProgress(id, isFollowProgress))\r\n        },\r\n        GetUsersThunk:(currentPage, page)=>{\r\n            dispatch(GetUsersThunk(currentPage, page))\r\n        },\r\n        onPageChanget:(p, currentPage, page, path)=>{\r\n            dispatch(onPageChanget(p, currentPage, page, path))\r\n        },\r\n        Following:(id)=>{\r\n            dispatch(Following(id))\r\n        },\r\n        UnFollowing:(id)=>{\r\n            dispatch(UnFollowing(id))\r\n        },\r\n        GetFriends:(currentPage, page)=>{\r\n            dispatch(GetFriends(currentPage, page))\r\n        },\r\n        SearchUser:(user) =>{\r\n            dispatch(SearchUser(user))\r\n        }\r\n    }\r\n}\r\nconst UsersApiContainerWithRouter = withRouter(UsersAPIContainer)\r\nconst UsersContainer = connect(mapStateToProps, mapDispatchToProps)(UsersApiContainerWithRouter);\r\n\r\nexport default UsersContainer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"MyPosts_textarea__2r6hw\",\"send\":\"MyPosts_send__3kS6o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava_user\":\"Post_ava_user__2kRuz\",\"post\":\"Post_post__bBK4D\"};"],"sourceRoot":""}